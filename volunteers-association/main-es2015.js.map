{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/organization.ts","./src/app/models/roles.enum.ts","./src/app/models/user.ts","./src/app/models/volunteer.ts","./src/app/register-organization/register-organization.component.ts","./src/app/register-organization/register-organization.component.html","./src/app/register-volunteer/register-volunteer.component.ts","./src/app/register-volunteer/register-volunteer.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/api.service.ts","./src/app/services/can-activate.service.ts","./src/app/services/orgnization.service.ts","./src/app/services/users.service.ts","./src/app/services/volunteer.service.ts","./src/app/users/manage-organization/edit/edit.component.ts","./src/app/users/manage-organization/edit/edit.component.html","./src/app/users/manage-organization/manage-organization.component.ts","./src/app/users/manage-organization/manage-organization.component.html","./src/app/users/manage-users/manage-users.component.ts","./src/app/users/manage-users/manage-users.component.html","./src/app/users/manage-users/user/user.component.ts","./src/app/users/manage-users/user/user.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { RegisterVolunteerComponent } from './register-volunteer/register-volunteer.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UsersComponent } from './users/users.component';\nimport { CanActivateService, CanActivateLogin } from './services/can-activate.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RegisterOrganizationComponent } from './register-organization/register-organization.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent, canActivate: [CanActivateLogin] },\n  { path: 'users', component: UsersComponent, canActivate: [CanActivateService] },\n  { path: 'register', component: RegisterComponent },\n  { path: 'register-volunteer', component: RegisterVolunteerComponent },\n  { path: 'register-organization', component: RegisterOrganizationComponent },\n  { path: '', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { User } from './models/user';\nimport { UsersService } from './services/users.service';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'volunteers-association';\n  user: User;\n  userSub: Subscription;\n\n  constructor(private usersService: UsersService, private route: Router) {\n  }\n  ngOnInit() {\n    this.userSub = this.usersService.user.subscribe(user => {\n      this.user = user;\n    });\n  }\n\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n  }\n  hasPermission(url: string): boolean {\n    // if (this.user) {\n    //   return this.usersService.hasPermission(url);\n    // }\n    return false;\n\n  }\n\n  logout() {\n    this.usersService.logoutUser();\n    this.route.navigate(['/']);\n  }\n}\n","<nav class=\"navbar navbar-default\">\n  <div class=\"container-fluid\">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">Volunteers Associations</a>\n    </div>\n\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n      <ul class=\"nav navbar-nav\">\n        <li *ngIf=\"!user\" [routerLinkActive]=\"'active'\"><a [routerLink]=\"['login']\">Login <span class=\"sr-only\">(current)</span></a></li>\n        <li *ngIf=\"hasPermission('/users')\" [routerLinkActive]=\"'active'\"><a  [routerLink]=\"['users']\">Manage Users</a></li>\n      </ul>\n      <!-- <form class=\"navbar-form navbar-left\">\n        <div class=\"form-group\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n      </form> -->\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li><p class=\"navbar-text\" *ngIf=\"!!user\">Hello, {{ user.first_name }} <a (click)=\"logout()\">(Logout)</a></p></li>\n      </ul>\n    </div><!-- /.navbar-collapse -->\n  </div><!-- /.container-fluid -->\n</nav>\n<div class=\"container\">\n  <div class=\"row\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UsersComponent } from './users/users.component';\nimport { HomeComponent } from './home/home.component';\nimport { ManageUsersComponent } from './users/manage-users/manage-users.component';\nimport { ManageOrganizationComponent } from './users/manage-organization/manage-organization.component';\nimport { UserComponent } from './users/manage-users/user/user.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { EditComponent } from './users/manage-organization/edit/edit.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RegisterVolunteerComponent } from './register-volunteer/register-volunteer.component';\nimport { RegisterOrganizationComponent } from './register-organization/register-organization.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UsersComponent,\n    HomeComponent,\n    ManageUsersComponent,\n    ManageOrganizationComponent,\n    UserComponent,\n    EditComponent,\n    RegisterComponent,\n    RegisterVolunteerComponent,\n    RegisterOrganizationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ModalModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { OrgnizationService } from 'src/app/services/orgnization.service';\nimport { Volunteer } from './../models/volunteer';\nimport { Organization } from './../models/organization';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { User } from '../models/user';\nimport { Subscription } from 'rxjs';\nimport { VolunteerService } from '../services/volunteer.service';\nimport { typeWithParameters } from '@angular/compiler/src/render3/util';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  user: User;\n  userSub: Subscription;\n  organizations: Organization[];\n  volunteers: Volunteer[];\n  registerSuccessMsg: boolean;\n  constructor(private userService: UsersService, private volunteerService: VolunteerService, private organizationserivce: OrgnizationService) { }\n\n  ngOnInit(): void {\n    this.userSub = this.userService.user.subscribe(user => {\n      this.user = user;\n      this.getAvailOrganizationsorVolunteers();\n    });\n  }\n  getAvailOrganizationsorVolunteers() {\n    if (this.user) {\n      if (this.user.role === \"volunteer\") {\n        let volun = this.user.obj as Volunteer;\n        if (volun) {\n          this.volunteerService.getAvailableOrganization(volun).subscribe(org => {\n            this.organizations = org;\n            console.log(this.organizations)\n          });\n        }\n      }\n      else {\n        let org = this.user.obj as Organization;\n        if (org) {\n          this.organizationserivce.getAvailableVolunteers(org).subscribe(volun => {\n            this.volunteers = volun;\n            console.log(this.volunteers)\n          });\n        }\n      }\n    }\n\n  }\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n  }\n  applyToOrg(orgid: string) {\n    if (this.user && orgid) {\n      let volun = this.user.obj as Volunteer;\n      this.volunteerService.registerToOrganization(volun, orgid).subscribe(suc => {\n        if (suc) {\n          this.registerSuccessMsg = true;\n        }\n\n      }, err => {\n        alert(err.error.error);\n      })\n    }\n  }\n  addVolunToOrg(volunid: string) {\n    if (this.user && volunid) {\n      let org = this.user.obj as Organization;\n      let volun = this.volunteers.find(r => r._id == volunid);\n      this.volunteerService.registerToOrganization(volun, org._id).subscribe(suc => {\n        if (suc) {\n          this.registerSuccessMsg = true;\n        }\n\n      }, err => {\n        alert(err.error.error);\n      })\n    }\n  }\n\n}\n","<div class=\"jumbotron\" *ngIf=\"!user\">\n  <h1>Welcome to Volunteer Application!</h1>\n  <div class=\"container\">\n    <div class=\"flex\">\n      <div class=\"small-title\">\n        sign up as:\n      </div>\n      <div class=\"small-title\">\n        Already have an account? <a [routerLink]=\"['login']\">Log in</a>\n      </div>\n    </div>\n    <div class=\"registarion-buttons\">\n      <a class=\"button\" [routerLink]=\"['register-volunteer']\">Volunteer</a>\n      <a class=\"button\" [routerLink]=\"['register-organization']\">Organization</a>\n    </div>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"user && organizations && !registerSuccessMsg\">\n  <h2>Found {{organizations.length}} available non-profits for you:</h2>\n  <br>\n  <br>\n  <div class=\"row\">\n    <div class=\"col-md-4\" *ngFor=\"let org of organizations\">\n      <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">{{org.name}}</div>\n        <div class=\"panel-body\">\n          <div class=\"org-desc\"> {{org.desc}}</div>\n          <br>\n          <button class=\"btn btn-primary\" (click)=\"applyToOrg(org._id)\">Apply</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"user && volunteers && !registerSuccessMsg\">\n  <h2>Found {{volunteers.length}} available for your organization:</h2>\n  <br>\n  <br>\n  <div class=\"row\">\n    <div class=\"col-md-4\" *ngFor=\"let volun of volunteers\">\n      <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">{{volun.firstName + \" \" + volun.lastName}}</div>\n        <div class=\"panel-body\">\n          <div class=\"org-desc\">email: {{volun.email}}\n            <br>\n            phone: {{volun.phone}}\n          </div>\n          <br>\n          <button class=\"btn btn-primary\" (click)=\"addVolunToOrg(volun._id)\">Add Volun</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"registerSuccessMsg\">\n  <h1>Your request have been submitted</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UsersService } from '../services/users.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  userForm: FormGroup;\n  errorMsg: string;\n  constructor(private formBuilder: FormBuilder, private userService: UsersService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n    });\n  }\n\n\n  OnSubmit() {\n    console.log(this.userForm);\n    if (!this.userForm.valid) {\n      return;\n    }\n    this.userService.login(this.userForm.value.email, this.userForm.value.password).subscribe(success => {\n      if (!success) {\n        this.errorMsg = 'Invalid credentials. Please check your user name and password.';\n        setTimeout(() => {\n          this.errorMsg = null;\n        }, 2000);\n      } else {\n        this.router.navigate(['/']);\n      }\n    });\n\n  }\n\n}\n","<h2>Login</h2>\n<hr>\n<form [formGroup]=\"userForm\" (ngSubmit)=\"OnSubmit()\">\n  <div class=\"form-group\"\n    [ngClass]=\"{ 'has-error': userForm.get('email').touched && userForm.get('email').errors != null }\">\n    <!-- First Name -->\n    <label for=\"first_name\" class=\"control-label\">Email</label>\n    <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"User Name\" formControlName=\"email\">\n    <span class=\"help-block\" *ngIf=\"userForm.get('email').touched && userForm.get('email').errors != null\">Missing or\n      Invalid Mail</span>\n  </div>\n  <div class=\"form-group\"\n    [ngClass]=\"{ 'has-error':userForm.get('password').touched && userForm.get('password').errors != null }\">\n    <!-- Password -->\n    <label for=\"password\" class=\"control-label\">Password</label>\n    <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"*****\"\n      formControlName=\"password\">\n    <span class=\"help-block\" *ngIf=\"userForm.get('password').touched && userForm.get('password').errors != null\">Missing\n      or Invalid Password</span>\n  </div>\n\n  <div class=\"form-group\">\n    <!-- Register Button -->\n    <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n  </div>\n\n</form>\n<div *ngIf=\"errorMsg && errorMsg !== ''\" class=\"alert alert-danger\">\n  <p>{{ errorMsg }}</p>\n</div>\n\n<p>Don't Have a User? <a [routerLink]=\"['/register']\">Register Here</a></p>\n","export class Organization {\n  _id: string;\n  name: string;\n  desc: string;\n  phone: number;\n  regionCode: string;\n  hobbyID: number;\n  password: string;\n  email: string;\n  maxVolunteers: number;\n  start: Date;\n  end: Date;\n}\n","export enum Roles {\n  Admin = 'admin',\n  Organization = 'organization',\n  Volunteer = 'volunteer'\n}\n","export class User {\n  _id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  password: string;\n  role: string;\n  organizationID: string;\n  obj: any;\n\n  constructor(first_name: string, last_name: string, email: string, password: string, role: string, organizationID: string, obj: any) {\n    this.first_name = first_name;\n    this.last_name = last_name;\n    this.email = email;\n    this.password = password;\n    this.role = role;\n    this.organizationID = organizationID;\n    this.obj = obj;\n  }\n\n}\n","export class Volunteer {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    birthDay:Date;\n    phone: number;\n    regions: string[];\n    hobbies: number[];\n    start: Date;\n    end: Date;\n}\n","import { Organization } from 'src/app/models/organization';\nimport { Region } from './../models/Region';\nimport { ApiService } from './../services/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Hobby } from '../models/Hobby';\nimport { OrgnizationService } from '../services/orgnization.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-organization',\n  templateUrl: './register-organization.component.html',\n  styleUrls: ['./register-organization.component.css']\n})\nexport class RegisterOrganizationComponent implements OnInit {\n  newOrgForm: FormGroup;\n  hobbies: Hobby[];\n  regions: Region[];\n  constructor(private formBuilder: FormBuilder, private apiService: ApiService, private orgnizationService: OrgnizationService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.newOrgForm = this.formBuilder.group({\n      orgName: ['', [Validators.required]],\n      orgDesc: [''],\n      orgEmail: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      orgPhone: ['', [Validators.required]],\n      orgMax: [1, [Validators.required]],\n      orgHobby: ['', [Validators.required]],\n      orgRegion: ['', [Validators.required]],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n    });\n    this.apiService.getHobbies()\n      .subscribe(response => {\n        this.hobbies = response;\n      });\n    this.apiService.getRegions()\n      .subscribe(response => {\n        this.regions = response;\n      });\n  }\n  buildOrgReq(): Organization {\n    const org = new Organization();\n    org.name = this.newOrgForm.get(\"orgName\").value;\n    org.desc = this.newOrgForm.get(\"orgDesc\").value;\n    org.email = this.newOrgForm.get(\"orgEmail\").value;\n    org.password = this.newOrgForm.get(\"password\").value;\n    org.phone = this.newOrgForm.get(\"orgRegion\").value;\n    org.regionCode = this.newOrgForm.get(\"orgRegion\").value;\n    org.hobbyID = this.newOrgForm.get(\"orgHobby\").value;\n    org.maxVolunteers = this.newOrgForm.get(\"orgMax\").value;\n    org.start = this.newOrgForm.get(\"startDate\").value;\n    org.end = this.newOrgForm.get(\"startDate\").value;\n    return org;\n  }\n  onFormSubmit() {\n    console.log(this.newOrgForm.value);\n    if (!this.newOrgForm.valid) {\n      return;\n    }\n    this.orgnizationService.createOrganization(this.buildOrgReq()).subscribe(suc => {\n      if (suc) {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"form-holder\">\n    <h1>Register Non Profit Organization</h1>\n    <form [formGroup]=\"newOrgForm\" (ngSubmit)=\"onFormSubmit()\">\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newOrgForm.get('orgName').touched && newOrgForm.get('orgName').errors != null }\">\n        <label for=\"n-user-f-name\">Organization Name:</label>\n        <input id=\"n-user-f-name\" type=\"text\" class=\"form-control\" formControlName=\"orgName\">\n        <span class=\"help-block\"\n          *ngIf=\"newOrgForm.get('orgName').touched && newOrgForm.get('orgName').errors != null\">Required Field</span>\n      </div>\n      <div class=\"form-group\">\n      <label for=\"n-org-desc\">Organization Description:</label>\n      <textarea id=\"n-org-desc\" type=\"text\" class=\"form-control\" formControlName=\"orgDesc\"></textarea>\n    </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newOrgForm.get('orgEmail').touched && newOrgForm.get('orgEmail').errors != null }\">\n        <label for=\"n-user-email\">Email:</label>\n        <input id=\"n-user-email\" type=\"email\" class=\"form-control\" formControlName=\"orgEmail\">\n        <span class=\"help-block\"\n          *ngIf=\"newOrgForm.get('orgEmail').touched && newOrgForm.get('orgEmail').errors != null\">Invalid Email\n          Address</span>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newOrgForm.get('password').touched && newOrgForm.get('password').errors != null }\">\n        <label for=\"n-user-l-name\">Password</label>\n        <input id=\"n-user-l-name\" type=\"password\" class=\"form-control\" formControlName=\"password\">\n        <span class=\"help-block\"\n          *ngIf=\"newOrgForm.get('password').touched && newOrgForm.get('password').errors != null\">Invalid\n          Password</span>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newOrgForm.get('orgPhone').touched && newOrgForm.get('orgPhone').errors != null }\">\n        <label for=\"n-user-phone\">Phone:</label>\n        <input id=\"n-user-phone\" type=\"number\" class=\"form-control\" formControlName=\"orgPhone\">\n        <span class=\"help-block\"\n          *ngIf=\"newOrgForm.get('orgPhone').touched && newOrgForm.get('orgPhone').errors != null\">Invalid Phone\n        </span>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newOrgForm.get('orgRegion').touched && newOrgForm.get('orgRegion').errors != null }\">\n        <label for=\"n-user-region\">Region of volunteering:</label>\n        <select id=\"n-user-region\" formControlName=\"orgRegion\" class=\"form-control\">\n          <option value=\"\">Select Region</option>\n          <option *ngFor=\"let region of regions\" [ngValue]=\"region.shortCode\">\n            {{\n                region.name\n              }}\n          </option>\n        </select>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newOrgForm.get('orgHobby').touched && newOrgForm.get('orgHobby').errors != null }\">\n        <label for=\"n-user-type\">Type of volunteering:</label>\n        <select id=\"n-user-type\" formControlName=\"orgHobby\" class=\"form-control\">\n          <option value=\"\">Select Volunteering Type</option>\n          <option *ngFor=\"let hobby of hobbies\" [ngValue]=\"hobby.ID\">\n            {{\n                    hobby.name\n                }}\n          </option>\n        </select>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newOrgForm.get('orgMax').touched && newOrgForm.get('orgMax').errors != null }\">\n        <label for=\"n-user-max\">Max Volunteers:</label>\n        <input id=\"n-user-max\" type=\"number\" class=\"form-control\" formControlName=\"orgMax\" min=\"1\">\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <h2>Orgnization Active Between:</h2>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"n-user-startdate\">Start Date</label>\n            <input id=\"n-user-startdate\" type=\"date\" class=\"form-control\" formControlName=\"startDate\" min=\"2020-09-01\">\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"n-user-enddate\">End Date</label>\n            <input id=\"n-user-enddate\" type=\"date\" class=\"form-control\" formControlName=\"endDate\" min=\"2020-09-02\">\n          </div>\n        </div>\n      </div>\n      <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>\n","import { VolunteerService } from './../services/volunteer.service';\nimport { Volunteer } from './../models/volunteer';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\nimport { Hobby } from '../models/Hobby';\nimport { Region } from '../models/Region';\nimport { ApiService } from '../services/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-volunteer',\n  templateUrl: './register-volunteer.component.html',\n  styleUrls: ['./register-volunteer.component.css']\n})\nexport class RegisterVolunteerComponent implements OnInit {\n\n  newVolForm: FormGroup;\n  hobbies: Hobby[];\n  regions: Region[];\n  constructor(private formBuilder: FormBuilder, private apiService: ApiService, private volunteerService: VolunteerService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.newVolForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      birthDay: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required]],\n      hobbies: this.formBuilder.array([], [Validators.required]),\n      regions: this.formBuilder.array([], [Validators.required]),\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n    });\n    this.apiService.getHobbies()\n      .subscribe(response => {\n        this.hobbies = response;\n      });\n    this.apiService.getRegions()\n      .subscribe(response => {\n        this.regions = response;\n      });\n  }\n  onCheckboxChange(e, name) {\n    const checkArray: FormArray = this.newVolForm.get(name) as FormArray;\n    if (e.target.checked) {\n      checkArray.push(new FormControl(e.target.value));\n    } else {\n      let i: number = 0;\n      checkArray.controls.forEach((item: FormControl) => {\n        if (item.value == e.target.value) {\n          checkArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n  buildVolReq(): Volunteer {\n    const vol = new Volunteer();\n    vol.firstName = this.newVolForm.get(\"firstName\").value;\n    vol.lastName = this.newVolForm.get(\"lastName\").value;\n    vol.birthDay = this.newVolForm.get(\"birthDay\").value;\n    vol.password = this.newVolForm.get(\"password\").value;\n    vol.email = this.newVolForm.get(\"email\").value;\n    vol.phone = this.newVolForm.get(\"phone\").value;\n    vol.start = this.newVolForm.get(\"startDate\").value;\n    vol.end = this.newVolForm.get(\"endDate\").value;\n    vol.hobbies = this.newVolForm.get(\"hobbies\").value.map(r => +r);\n    vol.regions = this.newVolForm.get(\"regions\").value;\n    return vol;\n  }\n  onFormSubmit() {\n    console.log(this.newVolForm.value);\n    if (!this.newVolForm.valid) {\n      return;\n    }\n    this.volunteerService.createVolunteers(this.buildVolReq()).subscribe(suc => {\n      if (suc) {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"form-holder\">\n    <h1>Register New Volunteer</h1>\n    <form [formGroup]=\"newVolForm\" (ngSubmit)=\"onFormSubmit()\">\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newVolForm.get('firstName').touched && newVolForm.get('firstName').errors != null }\">\n        <label for=\"n-user-f-name\">First Name:</label>\n        <input id=\"n-user-f-name\" type=\"text\" class=\"form-control\" formControlName=\"firstName\">\n        <span class=\"help-block\"\n          *ngIf=\"newVolForm.get('firstName').touched && newVolForm.get('firstName').errors != null\">Required\n          Field</span>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newVolForm.get('lastName').touched && newVolForm.get('lastName').errors != null }\">\n        <label for=\"n-user-l-name\">Last Name:</label>\n        <input id=\"n-user-l-name\" type=\"text\" class=\"form-control\" formControlName=\"lastName\">\n        <span class=\"help-block\"\n          *ngIf=\"newVolForm.get('lastName').touched && newVolForm.get('lastName').errors != null\">Required Field</span>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newVolForm.get('email').touched && newVolForm.get('email').errors != null }\">\n        <label for=\"n-user-email\">Email:</label>\n        <input id=\"n-user-email\" type=\"email\" class=\"form-control\" formControlName=\"email\">\n        <span class=\"help-block\"\n          *ngIf=\"newVolForm.get('email').touched && newVolForm.get('email').errors != null\">Invalid Email\n          Address</span>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newVolForm.get('password').touched && newVolForm.get('password').errors != null }\">\n        <label for=\"n-user-l-name\">Password</label>\n        <input id=\"n-user-l-name\" type=\"password\" class=\"form-control\" formControlName=\"password\">\n        <span class=\"help-block\"\n          *ngIf=\"newVolForm.get('password').touched && newVolForm.get('password').errors != null\">Invalid\n          Password</span>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newVolForm.get('birthDay').touched && newVolForm.get('birthDay').errors != null }\">\n        <label for=\"n-user-birthDay\">Birth Day</label>\n        <input id=\"n-user-birthDay\" type=\"date\" class=\"form-control\" formControlName=\"birthDay\"  max=\"2004-12-31\">\n        <span class=\"help-block\"\n          *ngIf=\"newVolForm.get('birthDay').touched && newVolForm.get('birthDay').errors != null\">Required\n          Field</span>\n      </div>\n      <div class=\"form-group\"\n        [ngClass]=\"{ 'has-error': newVolForm.get('phone').touched && newVolForm.get('phone').errors != null }\">\n        <label for=\"n-user-phone\">Phone:</label>\n        <input id=\"n-user-phone\" type=\"number\" class=\"form-control\" formControlName=\"phone\">\n        <span class=\"help-block\"\n          *ngIf=\"newVolForm.get('phone').touched && newVolForm.get('phone').errors != null\">Invalid Phone\n        </span>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"n-user-type\">Type of volunteering:</label>\n            <p class=\"error\" *ngIf=\"this.newVolForm.controls['hobbies'].errors?.required\">\n              Hobby is required, select at least one value.\n            </p>\n            <div *ngFor=\"let hobby of hobbies; let i=index\">\n              <label>\n                <input type=\"checkbox\" [value]=\"hobby.ID\" (change)=\"onCheckboxChange($event,'hobbies')\" />\n                {{hobby.name}}\n              </label>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"n-user-type\">Region of volunteering:</label>\n            <p class=\"error\" *ngIf=\"this.newVolForm.controls['regions'].errors?.required\">\n              Region is required, select at least one value.\n            </p>\n            <div *ngFor=\"let region of regions; let i=index\">\n              <label>\n                <input type=\"checkbox\" [value]=\"region.shortCode\" (change)=\"onCheckboxChange($event,'regions')\" />\n                {{region.name}}\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <h2>When are you available:</h2>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"n-user-startdate\">Start Date</label>\n            <input id=\"n-user-startdate\" type=\"date\" class=\"form-control\" formControlName=\"startDate\" min=\"2020-09-01\">\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"form-group\">\n            <label for=\"n-user-enddate\">End Date</label>\n            <input id=\"n-user-enddate\" type=\"date\" class=\"form-control\" formControlName=\"endDate\" min=\"2020-09-02\">\n          </div>\n        </div>\n      </div>\n      <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl, FormBuilder } from '@angular/forms';\nimport { format } from 'path';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  newUserForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.newUserForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      iam: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n      confirmPass: ['', [Validators.required, this.passwordValidators.bind(this)]]\n    });\n  }\n  passwordValidators(control: AbstractControl): { [key: string]: boolean } | null {\n    if (control.value !== undefined && this.newUserForm && this.newUserForm.get('password') && control.value !== this.newUserForm.get('password').value) {\n      return { match: true };\n    }\n    return null;\n  }\n\n\n\n  onFormSubmit() {\n    console.log(this.newUserForm.value);\n  }\n\n}\n","<h1>Register User</h1>\n<form [formGroup]=\"newUserForm\" (ngSubmit)=\"onFormSubmit()\">\n  <div class=\"form-group\" [ngClass]=\"{ 'has-error': newUserForm.get('email').touched && newUserForm.get('email').errors != null }\">\n    <label for=\"n-user-email\">Email:</label>\n    <input id=\"n-user-email\" type=\"email\" class=\"form-control\" formControlName=\"email\">\n    <span class=\"help-block\" *ngIf=\"newUserForm.get('email').touched && newUserForm.get('email').errors != null\">Invalid Email Address</span>\n  </div>\n  <div class=\"form-group\" [ngClass]=\"{ 'has-error': newUserForm.get('firstName').touched && newUserForm.get('firstName').errors != null }\">\n    <label for=\"n-user-f-name\">First Name:</label>\n    <input id=\"n-user-f-name\" type=\"text\" class=\"form-control\" formControlName=\"firstName\">\n    <span class=\"help-block\" *ngIf=\"newUserForm.get('firstName').touched && newUserForm.get('firstName').errors != null\">Required Field</span>\n  </div>\n  <div class=\"form-group\" [ngClass]=\"{ 'has-error': newUserForm.get('lastName').touched && newUserForm.get('lastName').errors != null }\">\n    <label for=\"n-user-l-name\">Last Name:</label>\n    <input id=\"n-user-l-name\" type=\"text\" class=\"form-control\" formControlName=\"lastName\">\n    <span class=\"help-block\" *ngIf=\"newUserForm.get('lastName').touched && newUserForm.get('lastName').errors != null\">Required Field</span>\n  </div>\n  <div class=\"form-group\" [ngClass]=\"{ 'has-error': newUserForm.get('iam').touched && newUserForm.get('iam').errors != null }\">\n    <label>I am</label>\n    <div class=\"radio\">\n      <label>\n        <input type=\"radio\" name=\"iam\" id=\"organization-owner\" value=\"o\" checked formControlName=\"iam\">\n        Organization Owner\n      </label>\n    </div>\n    <div class=\"radio\">\n      <label>\n        <input type=\"radio\" name=\"iam\" id=\"volunteer\" value=\"v\" formControlName=\"iam\">\n        Volunteer\n      </label>\n    </div>\n    <span class=\"help-block\" *ngIf=\"newUserForm.get('iam').touched && newUserForm.get('iam').errors != null\">Required Field</span>\n  </div>\n  <div class=\"form-group\" [ngClass]=\"{ 'has-error': newUserForm.get('password').touched && newUserForm.get('password').errors != null }\">\n    <label for=\"n-user-pass\">Password:</label>\n    <input type=\"password\" id=\"n-user-pass\" class=\"form-control\" formControlName=\"password\">\n    <span class=\"help-block\" *ngIf=\"newUserForm.get('password').touched && newUserForm.get('password').errors != null\">Invalid Password</span>\n  </div>\n  <div class=\"form-group\" [ngClass]=\"{ 'has-error': newUserForm.get('confirmPass').touched && newUserForm.get('confirmPass').errors != null }\">\n    <label for=\"n-user-c-pass\">Confirm Password:</label>\n    <input type=\"password\" id=\"n-user-c-pass\" class=\"form-control\" formControlName=\"confirmPass\">\n    <span class=\"help-block\" *ngIf=\"newUserForm.get('confirmPass').touched && newUserForm.get('confirmPass').errors != null\">Passwords Must Match</span>\n  </div>\n  <button class=\"btn btn-primary\" type=\"submit\">Register</button>\n</form>\n","import { Organization } from 'src/app/models/organization';\nimport { Volunteer } from './../models/volunteer';\nimport { Hobby } from './../models/Hobby';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { promise } from 'protractor';\nimport { Observable } from 'rxjs';\nimport { Region } from '../models/Region';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n  private readonly API_URL = 'https://volunteer-api-node.herokuapp.com/api/v1/'//'http://localhost:3000/api/v1/';\n\n  getUser(email: string): Observable<{ customer: User }> {\n    return this.http.get<{ customer: User }>(this.API_URL + 'customer/' + email);\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.API_URL + 'customer');\n  }\n\n  updateUser(user: User): Observable<{ customer: User }> {\n    return this.http.put<{ customer: User }>(this.API_URL + 'customer/' + user._id, user);\n  }\n\n  getOrganizations(): Observable<Organization[]> {\n    return this.http.get<Organization[]>(this.API_URL + 'organization');\n  }\n\n  createOrganization(organization: Organization): Observable<{ organization: Organization }> {\n    return this.http.post<{ organization: Organization }>(this.API_URL + 'organization', organization);\n  }\n  updateOrganization(organization: Organization): Observable<void> {\n    return this.http.put<void>(this.API_URL + 'organization/' + organization._id, organization);\n  }\n  getHobbies(): Observable<Hobby[]> {\n    return this.http.get<Hobby[]>(this.API_URL + 'hobbies');\n  }\n  getRegions(): Observable<Region[]> {\n    return this.http.get<Region[]>(this.API_URL + 'regions');\n  }\n  getVolunteers(): Observable<Volunteer[]> {\n    return this.http.get<Volunteer[]>(this.API_URL + 'volunteer');\n  }\n\n  createVolunteer(volunteer: Volunteer): Observable<{ volunteer: Volunteer }> {\n    return this.http.post<{ volunteer: Volunteer }>(this.API_URL + 'volunteer', volunteer);\n  }\n  updateVolunteer(volunteer: Volunteer): Observable<void> {\n    return this.http.put<void>(this.API_URL + 'volunteer/' + volunteer._id, volunteer);\n  }\n  getOpenOrganization(volunteer: Volunteer): Observable<Organization[]> {\n    return this.http.get<Organization[]>(this.API_URL + 'volunteer/organizations/' + volunteer.email);\n  }\n  getFreeVolunteers(org: Organization): Observable<Volunteer[]> {\n    return this.getVolunteers();\n   // return this.http.get<Volunteer[]>(this.API_URL + 'organizations/volunteer/' + org._id);\n  }\n  registerVolunteerToOrganization(volunteer: Volunteer, orgid: string): Observable<boolean> {\n    return this.http.put<boolean>(this.API_URL + 'volunteer/register/' + volunteer.email + '/' + orgid, null);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\nimport { Observable, observable } from 'rxjs';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateService implements CanActivate {\n\n  private persmissions: { role: string, urls: string[] }[] = [{\n    role: 'admin', urls: ['users']\n  }];\n  constructor(private userService: UsersService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return new Observable(observe => {\n      this.userService.user.subscribe(user => {\n        observe.next(this.userService.hasPermission(this.getResolvedUrl(route)));\n      });\n    });\n  }\n\n  private getResolvedUrl(route: ActivatedRouteSnapshot): string {\n    return route.pathFromRoot\n      .map(v => v.url.map(segment => segment.toString()).join('/'))\n      .join('/');\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateLogin implements CanActivate {\n  constructor(private userService: UsersService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return new Observable(observe => {\n      this.userService.user.subscribe(user => {\n        if (!!user) {\n          observe.next(this.router.parseUrl('/'));\n        } else {\n          observe.next(true);\n        }\n      });\n    });\n  }\n}\n","import { Volunteer } from './../models/volunteer';\nimport { Organization } from 'src/app/models/organization';\nimport { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrgnizationService {\n\n  organizations: BehaviorSubject<Organization[]> = new BehaviorSubject([]);\n\n  constructor(private apiService: ApiService) {\n    this.getOrganizations().subscribe(res => this.organizations.next(res));\n  }\n\n  getOrganizations(): Observable<Organization[]> {\n    return this.apiService.getOrganizations();\n  }\n  getAvailableVolunteers(org: Organization): Observable<Volunteer[]> {\n    return this.apiService.getFreeVolunteers(org);\n  }\n  createOrganization(organization: Organization): Observable<Organization> {\n    return this.apiService.createOrganization(organization).pipe(map(o => o.organization));\n  }\n\n  updateOrganization(organization: Organization): Observable<boolean> {\n    return this.apiService.updateOrganization(organization).pipe(map(res => true),\n      tap(res => {\n        if (res && this.organizations.value && this.organizations.value.length) {\n          const updatedOrgIndex = this.organizations.value.findIndex(o => o._id === organization._id);\n          if (updatedOrgIndex > -1) {\n            this.organizations.value[updatedOrgIndex] = organization;\n            this.organizations.next(this.organizations.value);\n          }\n        }\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../models/user';\nimport { ApiService } from './api.service';\nimport { map } from 'rxjs/operators';\nimport { Roles } from '../models/roles.enum';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private apiService: ApiService) {\n    this.getUser();\n  }\n\n  user = new BehaviorSubject<User>(null);\n  private persmissions: { role: string, urls: string[] }[] = [{\n    role: Roles.Admin, urls: ['/users']\n  }];\n  login(email: string, password: string): Observable<boolean> {\n    return this.apiService.getUser(email).pipe(map(user => {\n      if (user && user.customer && user.customer.password === password) {\n        this.setUser(user.customer);\n        this.user.next(user.customer);\n        return true;\n      }\n      return false;\n    }));\n  }\n  getUser() {\n    try {\n      const user = JSON.parse(localStorage.getItem('curentuser')) as User;\n      if (user) {\n        this.user.next(user);\n      }\n    } catch (e) { }\n  }\n\n  setUser(user: User) {\n    if (user) {\n      localStorage.setItem('curentuser', JSON.stringify(user));\n    }\n  }\n\n  hasPermission(url: string): boolean {\n    if (this.user.value) {\n      let permission: { role: string, urls: string[] };\n      permission = this.persmissions.find(p => p.role === this.user.value.role);\n      if (permission) {\n        const _url = permission.urls.find(u => u === url);\n        return !!_url;\n      }\n    }\n    return false;\n  }\n\n  logoutUser() {\n    localStorage.removeItem('curentuser');\n    this.user.next(null);\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.apiService.getUsers();\n\n  }\n\n  getRoles(): { name: string, key: string }[] {\n    return Object.keys(Roles).map(k => {\n      return { name: k, key: Roles[k] }\n    });\n  }\n  getRoleName(role: string) {\n    const roles = this.getRoles();\n    if (roles && roles.length) {\n      const roleObj = roles.find(r => r.key === role);\n      if (roleObj) {\n        return roleObj.name;\n      }\n      return role;\n    }\n  }\n\n  updateUser(user: User): Observable<boolean> {\n    return this.apiService.updateUser(user).pipe((map(u => !!u.customer)));\n  }\n}\n","import { Organization } from './../models/organization';\nimport { Volunteer } from './../models/volunteer';\nimport { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { Observable, BehaviorSubject, of, observable } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VolunteerService {\n\n  volunteers: BehaviorSubject<Volunteer[]> = new BehaviorSubject([]);\n\n  constructor(private apiService: ApiService) {\n    //this.getVolunteers().subscribe(res => this.volunteers.next(res));\n  }\n\n  getVolunteers(): Observable<Volunteer[]> {\n    return this.apiService.getVolunteers();\n  }\n  createVolunteers(volunteer: Volunteer): Observable<Volunteer> {\n    return this.apiService.createVolunteer(volunteer).pipe(map(o => o.volunteer));\n  }\n  getAvailableOrganization(volunteer: Volunteer): Observable<Organization[]> {\n    return this.apiService.getOpenOrganization(volunteer);\n  }\n  registerToOrganization(volunteer: Volunteer, org: string): Observable<boolean> {\n    return this.apiService.registerVolunteerToOrganization(volunteer, org);\n  }\n\n  updateVolunteer(volunteer: Volunteer): Observable<boolean> {\n    return this.apiService.updateVolunteer(volunteer).pipe(map(res => true),\n      tap(res => {\n        if (res && this.volunteers.value && this.volunteers.value.length) {\n          const updatedOrgIndex = this.volunteers.value.findIndex(o => o._id === volunteer._id);\n          if (updatedOrgIndex > -1) {\n            this.volunteers.value[updatedOrgIndex] = volunteer;\n            this.volunteers.next(this.volunteers.value);\n          }\n        }\n      }));\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Organization } from 'src/app/models/organization';\n\n@Component({\n  selector: 'app-organization-edit, [app-organization-edit]',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  @Input() organization: Organization;\n  @Output() editOrganization = new EventEmitter<Organization>();\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log('init');\n  }\n\n  onEditOrganization() {\n    this.editOrganization.emit(this.organization);\n  }\n\n\n\n}\n","<td>{{ organization._id }}</td>\n<td>{{ organization.name }}</td>\n<td>{{ organization.desc }}</td>\n<td><a (click)=\"onEditOrganization()\">Edit <span class=\"glyphicon glyphicon-pencil\"></span></a></td>\n","import { Component, OnInit } from '@angular/core';\nimport { Organization } from 'src/app/models/organization';\nimport { OrgnizationService } from 'src/app/services/orgnization.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-manage-organization',\n  templateUrl: './manage-organization.component.html',\n  styleUrls: ['./manage-organization.component.css']\n})\nexport class ManageOrganizationComponent implements OnInit {\n  organizations: Organization[];\n\n  labels: { submitOrganizationError: string, submitOrganizationESuccess: string, editTitle: string } = {\n    editTitle: null, submitOrganizationESuccess: null, submitOrganizationError: null\n  };\n  constructor(private organizationService: OrgnizationService) { }\n  isEditOrganization = false;\n  isNewOrganization = false;\n  organizationForm: FormGroup;\n  editOrganizationID: string;\n  ngOnInit(): void {\n    this.organizationService.organizations.subscribe(res => {\n      console.log(res);\n      this.organizations = res;\n    });\n\n    this.organizationForm = new FormGroup({\n      name: new FormControl(null, [Validators.required]),\n      desc: new FormControl(null)\n    });\n  }\n\n\n  onToggleOrganization(toShowForm: boolean) {\n    this.isNewOrganization = toShowForm;\n  }\n\n  cancelEdit() {\n    this.isEditOrganization = false;\n  }\n\n  OnOrganizationSubmit() {\n\n    if (this.organizationForm.valid) {\n\n      const organization: Organization = new Organization();\n      organization.name = this.organizationForm.value.name;\n      organization.desc = this.organizationForm.value.desc;\n\n      if (this.isEditOrganization) {\n        organization._id = this.editOrganizationID;\n        this.organizationService.updateOrganization(organization).subscribe(res => {\n          this.printSuccess('Organization ' + organization.name + ' was updated successfully');\n        }, err => {\n          this.printErrMsg('Failed to update organization');\n        });\n\n      }\n    }\n\n  }\n  private printSuccess(msg: string) {\n    this.labels.submitOrganizationESuccess = msg;\n    this.hideMessageTimeout();\n  }\n  private printErrMsg(msg: string) {\n    this.labels.submitOrganizationError = msg;\n    this.hideMessageTimeout();\n  }\n  private hideMessageTimeout() {\n    setTimeout(() => {\n      this.labels.submitOrganizationError = null;\n      this.labels.submitOrganizationESuccess = null;\n    }, 2500);\n  }\n  EditOrganization(organization: Organization) {\n    //console.log('edit0');\n    this.isEditOrganization = true;\n    this.isNewOrganization = false;\n    this.editOrganizationID = organization._id;\n    this.organizationForm.reset();\n    this.labels.editTitle = 'Edit Organization: ' + organization.name;\n    this.organizationForm.setValue({\n      name: organization.name,\n      desc: organization.desc\n    });\n\n  }\n}\n","<h4>Manage Organizations</h4>\n<table class=\"table table-striped\">\n  <tbody>\n    <tr>\n      <th>ID</th>\n      <th>Name </th>\n      <th>Description</th>\n      <th></th>\n    </tr>\n    <tr app-organization-edit *ngFor=\"let organization of organizations\" [organization]=\"organization\" (editOrganization)=\"EditOrganization($event)\"></tr>\n  </tbody>\n</table>\n<button (click)=\"onToggleOrganization(true)\" *ngIf=\"!isNewOrganization && !isEditOrganization\" type=\"button\" class=\"btn btn-primary\"><span\n    class=\"glyphicon glyphicon-plus-sign\"></span>\n  Add New Orghanization</button>\n<button (click)=\"onToggleOrganization(false)\" *ngIf=\"isNewOrganization && !isEditOrganization\" type=\"button\"\n  class=\"btn btn-secondary\">Close</button>\n\n<h4 *ngIf=\"isEditOrganization\">{{ labels.editTitle }}<button [ngStyle]=\"{ marginLeft: '20px' }\"\n    class=\"btn btn-secondary\" (click)=\"cancelEdit()\">Cancel</button>\n</h4>\n<form [formGroup]=\"organizationForm\" (ngSubmit)=\"OnOrganizationSubmit()\" *ngIf=\"isNewOrganization || isEditOrganization\">\n  <div class=\"form-group\"\n    [ngClass]=\"{ 'has-error': organizationForm.get('name').touched && organizationForm.get('name').errors != null }\">\n    <label for=\"new-email\">Organization Name</label>\n    <input type=\"text\" id=\"new-org-name\" class=\"form-control\" formControlName=\"name\" />\n    <span class=\"help-block\" *ngIf=\"organizationForm.get('name').touched && organizationForm.get('name').errors\">Invalid\n      Name</span>\n  </div>\n  <div class=\"form-group\"\n    [ngClass]=\"{ 'has-error': organizationForm.get('desc').touched && organizationForm.get('desc').errors != null }\">\n    <label for=\"new-org-desc\">Organization Description</label>\n    <input type=\"text\" id=\"new-org-desc\" class=\"form-control\" formControlName=\"desc\" />\n    <span class=\"help-block\" *ngIf=\"organizationForm.get('desc').touched && organizationForm.get('desc').errors\">Invalid\n      First Description</span>\n  </div>\n  <button type=\"button\" [disabled]=\"organizationForm.invalid\" class=\"btn btn-success\" (click)=\"OnOrganizationSubmit()\">Submit Organization</button>\n</form>\n\n<div class=\"alert alert-danger\" *ngIf=\"labels.submitOrganizationError\">\n  <p>{{ labels.submitOrganizationError }}</p>\n</div>\n<div class=\"alert alert-success\" *ngIf=\"labels.submitOrganizationESuccess\">\n  <p>{{ labels.submitOrganizationESuccess }}</p>\n</div>\n\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UsersService } from 'src/app/services/users.service';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Organization } from 'src/app/models/organization';\n\nimport { OrgnizationService } from 'src/app/services/orgnization.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.css']\n})\nexport class ManageUsersComponent implements OnInit {\n\n  users: User[];\n  newUserForm: FormGroup;\n  newOrganization: FormGroup;\n  roles: { name: string, key: string }[] = [];\n  organizations: Organization[] = null;\n  newUserMode = false;\n  editUserMode = false;\n  selectedRole: string;\n\n  userFromLabels: { opErr: string, opSuccess: string, editTitle: string } = { editTitle: null, opErr: null, opSuccess: null };\n  modalRef: BsModalRef;\n\n\n  constructor(private userService: UsersService, private organizationService: OrgnizationService,\n    private formBuilder: FormBuilder, private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n\n    this.roles = this.userService.getRoles();\n    this.newUserForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(5), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\n      lastName: ['', [Validators.required, Validators.minLength(2)]],\n      role: ['', [Validators.required]],\n      organization: ['', []]\n    });\n\n    this.newUserForm.get('role').valueChanges.subscribe(r => {\n      if (r === 'organization') {\n        this.newUserForm.get('organization').setValidators(Validators.required);\n      } else {\n        this.newUserForm.get('organization').setValidators(null);\n      }\n    });\n    this.newOrganization = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(4)]],\n      desc: ['', []]\n    });\n    this.userService.getUsers().subscribe(users => {\n      this.users = users;\n    });\n\n    this.organizationService.organizations.subscribe(o => {\n      this.organizations = o;\n      if (this.organizations.length) {\n        this.newUserForm.get('organization').setValue(this.organizations[0]._id);\n      }\n    });\n\n  }\n  OnAddUserSubmit() {\n    console.log(this.newUserForm.valid);\n    if (this.newUserForm.valid) {\n      const formUser = new User(\n        this.newUserForm.value.firstName,\n        this.newUserForm.value.lastName,\n        this.newUserForm.value.email,\n        this.newUserForm.value.password,\n        this.newUserForm.value.role,\n        this.newUserForm.value.organization,\n        null\n      );\n      if (this.editUserMode) {\n        formUser._id = this.newUserForm.value.password;\n        this.userService.updateUser(formUser).subscribe(r => {\n          if (r) {\n            this.userFromLabels.opSuccess = 'User Successfully updated';\n          } else {\n            this.userFromLabels.opErr = 'Failed To Update User';\n          }\n          setTimeout(() => {\n            this.userFromLabels.opSuccess = null;\n            this.userFromLabels.opErr = null;\n          }, 3000);\n        }, err => {\n          this.userFromLabels.opErr = err.error;\n          setTimeout(() => {\n            this.userFromLabels.opSuccess = null;\n            this.userFromLabels.opErr = null;\n          }, 3000);\n        }\n        );\n      } else {\n\n      }\n\n    }\n\n  }\n\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n\n  }\n  onCreateOrganization() {\n    const organizationToAdd = new Organization();\n    organizationToAdd.desc = this.newOrganization.value.desc || '';\n    organizationToAdd.name = this.newOrganization.value.name;\n\n    this.organizationService.createOrganization(organizationToAdd).subscribe(o => {\n      if (o) {\n        this.organizations.push(o);\n        this.newOrganization.reset();\n        this.modalRef.hide();\n        this.newUserForm.get('organization').setValue(o._id);\n      }\n    });\n\n  }\n  onToggleUser(state: boolean) {\n    this.editUserMode = false;\n    if (state) {\n      this.newUserForm.reset();\n      this.newUserForm.get('password').setValidators([Validators.required, Validators.minLength(5), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]);\n    }\n    this.newUserMode = state;\n  }\n  onEditUserEvent(user: User) {\n    this.newUserMode = false;\n    this.newUserForm.reset();\n    if (!user) {\n      this.editUserMode = false;\n      return;\n    }\n    this.editUserMode = true;\n    this.userFromLabels.editTitle = `Edit User ${user.first_name} ${user.last_name}`;\n\n    // remove password validator\n    this.newUserForm.get('password').setValidators([]);\n    this.newUserForm.setValue({\n      email: user.email,\n      firstName: user.first_name,\n      lastName: user.last_name,\n      organization: user.organizationID || '',\n      role: user.role,\n      password: user._id\n    });\n  }\n\n  cancelEdit() {\n    this.editUserMode = false;\n  }\n\n}\n","<h4>Manage Users</h4>\n<table class=\"table table-striped\">\n  <tbody>\n    <tr>\n      <th>Email</th>\n      <th>First Name</th>\n      <th>Last Name</th>\n      <th>Role</th>\n      <th>Organization</th>\n      <th></th>\n    </tr>\n    <tr app-user *ngFor=\"let user of users\" [user]=\"user\" [organizations]=\"organizations\"\n      (EditUserClicked)=\"onEditUserEvent($event)\"></tr>\n  </tbody>\n</table>\n<div>\n  <button (click)=\"onToggleUser(true)\" *ngIf=\"!newUserMode && !editUserMode\" type=\"button\" class=\"btn btn-primary\"><span\n      class=\"glyphicon glyphicon-plus-sign\"></span>\n    Add User</button>\n  <button (click)=\"onToggleUser(false)\" *ngIf=\"newUserMode && !editUserMode\" type=\"button\"\n    class=\"btn btn-secondary\">Close</button>\n\n  <h4 *ngIf=\"editUserMode\">{{ userFromLabels.editTitle }}<button [ngStyle]=\"{ marginLeft: '20px' }\" class=\"btn btn-secondary\" (click)=\"cancelEdit()\">Cancel</button>\n  </h4>\n  <form [formGroup]=\"newUserForm\" (ngSubmit)=\"OnAddUserSubmit()\" *ngIf=\"newUserMode || editUserMode\">\n    <div class=\"form-group\"\n      [ngClass]=\"{ 'has-error': newUserForm.get('email').touched && newUserForm.get('email').errors != null }\">\n      <label for=\"new-email\">User Email</label>\n      <input type=\"text\" id=\"new-email\" class=\"form-control\" formControlName=\"email\" />\n      <span class=\"help-block\" *ngIf=\"newUserForm.get('email').touched && newUserForm.get('email').errors\">Invalid\n        Email</span>\n    </div>\n    <div class=\"form-group\"\n      [ngClass]=\"{ 'has-error': newUserForm.get('firstName').touched && newUserForm.get('firstName').errors != null }\">\n      <label for=\"new-firstname\">User First Name</label>\n      <input type=\"text\" id=\"new-firstname\" class=\"form-control\" formControlName=\"firstName\" />\n      <span class=\"help-block\"\n        *ngIf=\"newUserForm.get('firstName').touched && newUserForm.get('firstName').errors\">Invalid First Name</span>\n    </div>\n    <div class=\"form-group\"\n      [ngClass]=\"{ 'has-error': newUserForm.get('lastName').touched && newUserForm.get('lastName').errors != null }\">\n      <label for=\"new-lastname\">User Last Name</label>\n      <input type=\"text\" id=\"new-lastname\" class=\"form-control\" formControlName=\"lastName\" />\n      <span class=\"help-block\" *ngIf=\"newUserForm.get('lastName').touched && newUserForm.get('lastName').errors\">Invalid\n        Last Name </span>\n    </div>\n    <div class=\"form-group\" *ngIf=\"!editUserMode\"\n      [ngClass]=\"{ 'has-error': newUserForm.get('password').touched && newUserForm.get('password').errors != null }\">\n      <label for=\"new-password\">User Password</label>\n      <input type=\"password\" id=\"new-password\" class=\"form-control\" formControlName=\"password\" />\n      <span class=\"help-block\"></span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"new-email\">User Role</label>\n      <select class=\"form-control\" formControlName=\"role\">\n        <option *ngFor=\"let role of roles\" [value]=\"role.key\">{{ role.name }}</option>\n      </select>\n      <span class=\"help-block\"></span>\n    </div>\n    <div *ngIf=\"newUserForm.value.role === 'organization'\" class=\"form-group organization-group\"\n      [ngClass]=\"{ 'has-error': newUserForm.get('organization').touched && newUserForm.get('organization').errors != null }\">\n      <label for=\"new-organization\">Select Organization</label>\n      <select class=\"form-control\" formControlName=\"organization\"\n        [value]=\"organizations && organizations.length ? organizations[0]._id : ''\">\n        <option *ngFor=\"let organ of organizations;\" [value]=\"organ._id\">{{ organ.name }}</option>\n      </select>\n      <span class=\"help-block\"></span>\n    </div>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"OnAddUserSubmit()\">Submit User</button>\n  </form>\n  <ng-template #template>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title pull-left\">Add New Organization</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <form [formGroup]=\"newOrganization\" (ngSubmit)=\"onCreateOrganization()\">\n        <div class=\"form-group\"\n          [ngClass]=\"{ 'has-error': newOrganization.get('name').touched && newOrganization.get('name').errors != null }\">\n          <label for=\"new-organ-name\">Organization Name</label>\n          <input type=\"text\" id=\"new-organ-name\" class=\"form-control\" formControlName=\"name\" />\n          <span class=\"help-block\"\n            *ngIf=\"newOrganization.get('name').touched && newOrganization.get('name').errors\">Invalid Name </span>\n        </div>\n        <div class=\"form-group\"\n          [ngClass]=\"{ 'has-error': newOrganization.get('desc').touched && newOrganization.get('desc').errors != null }\">\n          <label for=\"new-organ-desc\">Organization Description</label>\n          <input type=\"text\" id=\"new-organ-desc\" class=\"form-control\" formControlName=\"desc\" />\n          <span class=\"help-block\"\n            *ngIf=\"newOrganization.get('desc').touched && newOrganization.get('desc').errors\">Invalid Description\n          </span>\n        </div>\n        <button class=\"btn btn-primary\" [disabled]=\"!newOrganization.valid\">Add New Organization</button>\n      </form>\n    </div>\n  </ng-template>\n  <div class=\"alert alert-danger\" *ngIf=\"userFromLabels.opErr\">\n    <p>{{ userFromLabels.opErr }}</p>\n  </div>\n  <div class=\"alert alert-success\" *ngIf=\"userFromLabels.opSuccess\">\n    <p>{{ userFromLabels.opSuccess }}</p>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UsersService } from 'src/app/services/users.service';\nimport { Organization } from 'src/app/models/organization';\nimport { OrgnizationService } from 'src/app/services/orgnization.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-user, [app-user]',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  @Input() user: User;\n  @Input() organizations: Organization[] = [];\n  @Output() EditUserClicked = new EventEmitter<User>();\n  selectedRole: string;\n\n\n  roles: { key: string, name: string }[];\n\n  edit = false;\n  constructor(private userService: UsersService, private organizationService: OrgnizationService) { }\n\n  ngOnInit(): void {\n    this.roles = this.userService.getRoles();\n    this.selectedRole = this.user.role;\n\n  }\n  getRoleName(role: string) {\n    return this.userService.getRoleName(role);\n  }\n  editUser() {\n    this.EditUserClicked.emit(this.user);\n  }\n  cancelEdit() {\n    this.EditUserClicked.emit(null);\n  }\n  saveUser() {\n\n  }\n  getOrganization(organizationID: string): string {\n    if (organizationID && organizationID !== '' && this.organizations && this.organizations.length) {\n      const organizationObj = this.organizations.find(o => o._id === organizationID);\n      if (organizationObj) {\n        return organizationObj.name;\n      }\n    }\n    return '';\n  }\n}\n","<ng-template [ngIf]=\"!edit\">\n  <td>{{ user.email }}</td>\n  <td>{{ user.first_name }}</td>\n  <td>{{ user.last_name }}</td>\n  <td>{{ getRoleName(user.role) }}</td>\n  <td>{{ getOrganization(user.organizationID) }}</td>\n  <td><a (click)=\"editUser()\">Edit <span class=\"glyphicon glyphicon-pencil\"></span></a></td>\n</ng-template>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { User } from '../models/user';\nimport { UsersService } from '../services/users.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n\n  user: User;\n  userSub: Subscription;\n\n\n  constructor(private userService: UsersService) { }\n\n  ngOnInit(): void {\n    this.userSub = this.userService.user.subscribe(u => this.user = u);\n  }\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n  }\n\n}\n","<div class=\"container\">\n  <h2>Hello {{ user.first_name }}, </h2>\n  <p>as an administrator you can edit the system users</p>\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <app-manage-users></app-manage-users>\n    </div>\n    <div class=\"col-md-6\">\n      <app-manage-organization></app-manage-organization>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}